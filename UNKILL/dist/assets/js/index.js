/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/index.js":
/*!******************************!*\
  !*** ./src/scripts/index.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Burger Menu\r\n\r\nconst burgerBtn = document.getElementById('burger-btn');\r\nconst burgerMenu = document.querySelector('.burger-menu');\r\nconst burgerWrraper = document.querySelector('.burger-wrraper');\r\nconst burgerLinks = document.querySelectorAll('.burger-menu__link');\r\nconst burgerClose = document.querySelector('.burger-menu__icon');\r\n\r\nconst hideBurgerMenu = () => {\r\n    document.body.style.overflow = '';\r\n    burgerWrraper.classList.remove('flex');\r\n    burgerMenu.classList.remove('show');\r\n    burgerBtn.classList.remove('active');\r\n}\r\nconst showBurgerMenu = () => {\r\n    document.body.style.overflow = 'hidden';\r\n    burgerWrraper.classList.add('flex');\r\n    burgerMenu.classList.add('show');\r\n    burgerBtn.classList.add('active');\r\n}\r\n\r\nconst toggleBurgerMenu = () => {\r\n    if (burgerMenu.classList.contains('show')) {\r\n        hideBurgerMenu()\r\n    } else {\r\n        showBurgerMenu()\r\n    }\r\n};\r\n\r\nburgerBtn.addEventListener('click', toggleBurgerMenu);\r\n\r\nburgerLinks.forEach(link => {\r\n    link.addEventListener('click', toggleBurgerMenu);\r\n})\r\n\r\nburgerClose.addEventListener('click', hideBurgerMenu)\r\n\r\n//  Select\r\n\r\nconst getTemplate = (data = [], placeholder, selectedId) => {\r\n    let text = placeholder ?? 'placeholder не указан'\r\n\r\n    const items = data.map(item => {\r\n        let cls = ''\r\n        if (item.id === selectedId) {\r\n            text = item.value\r\n            cls = 'selected'\r\n        }\r\n        return `<li class=\"select__item ${cls}\" data-type=\"item\" data-id=\"${item.id}\"><a href='${item.link}'>${item.value}</a></li>`\r\n    })\r\n    return `\r\n    <input type=\"hidden\" class=\"hidden__input\">\r\n    <div class=\"select__backdrop\" data-type=\"backdrop\"></div>\r\n    <div class=\"select__input\" data-type=\"input\">\r\n        <span data-type=\"value\">${text}</span>\r\n        <svg class=\"select__icon\" width=\"16\" height=\"10\" viewBox=\"0 0 16 10\" data-type=\"arrow\">\r\n              <use xlink:href=\"#selectArrow\"></use>\r\n        </svg>\r\n    </div>\r\n    <div class=\"select__dropdown\">\r\n        <ul class=\"select__list\">\r\n            ${items.join('')}\r\n        </ul>\r\n    </div>\r\n`\r\n}\r\nclass Select {\r\n    constructor(selector, options) {\r\n        this.$el = document.querySelector(selector)\r\n        this.options = options\r\n        this.selectedId = options.selectedId\r\n\r\n        this.render()\r\n        this.setup()\r\n    }\r\n\r\n    render() {\r\n        const { placeholder, data } = this.options;\r\n        this.$el.classList.add('select');\r\n        this.$el.innerHTML = getTemplate(data, placeholder, this.selectedId);\r\n    }\r\n    setup() {\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n        this.$el.addEventListener('click', this.clickHandler);\r\n        this.$arrow = this.$el.querySelector('[data-type=\"arrow\"]');\r\n        this.$value = this.$el.querySelector('[data-type=\"value\"]');\r\n    }\r\n\r\n    clickHandler(event) {\r\n        const { type } = event.target.dataset;\r\n        if (type === 'input') {\r\n            this.toggle();\r\n        } else if (type === 'item') {\r\n            const id = event.target.dataset.id\r\n            this.select(id);\r\n        } else if (type === 'backdrop') {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    get isOpen() {\r\n        return this.$el.classList.contains('open');\r\n    }\r\n\r\n    get current() {\r\n        return this.options.data.find(item => item.id === this.selectedId);\r\n    }\r\n\r\n    select(id) {\r\n        this.selectedId = id;\r\n        this.$value.textContent = this.current.value;\r\n\r\n        this.$el.querySelectorAll(`[data-type=\"item\"]`).forEach(el => el.classList.remove('selected'));\r\n        this.$el.querySelector(`[data-id=\"${id}\"]`).classList.add('selected');\r\n\r\n        this.options.onSelect ? this.options.onSelect(this.current) : null;\r\n        this.close();\r\n    }\r\n\r\n    toggle() {\r\n        this.isOpen ? this.close() : this.open();\r\n    }\r\n\r\n    open() {\r\n        this.$el.classList.add('open');\r\n        this.$arrow.classList.add('open');\r\n    }\r\n\r\n    close() {\r\n        this.$el.classList.remove('open');\r\n        this.$arrow.classList.remove('open');\r\n    }\r\n\r\n    destroy() {\r\n        this.$el.removeEventListener('click', this.clickHandler);\r\n        this.$el.innerHTML = '';\r\n    }\r\n}\r\n\r\ntry {\r\n    const headerSelect = new Select('.header__select', {\r\n        placeholder: 'Меню',\r\n        selectedId: '1',\r\n        data: [\r\n            { id: 'journal', value: 'Журналы', link: './journal.html' },\r\n            { id: 'author', value: 'Авторам', link: './author.html' },\r\n            { id: 'contact', value: 'Контакты', link: './contact.html' },\r\n        ],\r\n        onSelect(item) {\r\n            const input = document.querySelector('.hidden__input')\r\n            input.value = item.value\r\n        }\r\n    })\r\n} catch (error) {\r\n    console.log('Элемент не найден на странице');\r\n}\r\n\r\ntry {\r\n    const headerInsuranceSelect = new Select('.header__insurance-select', {\r\n        placeholder: 'Меню',\r\n        selectedId: '1',\r\n        data: [\r\n            { id: 'journal', value: 'Архив', link: '#' },\r\n            { id: 'author', value: 'Авторам', link: './author.html' },\r\n            { id: 'contact', value: 'Контакты', link: './contact.html' },\r\n        ],\r\n        onSelect(item) {\r\n            const input = document.querySelector('.hidden__input')\r\n            input.value = item.value\r\n        }\r\n    })\r\n} catch (error) {\r\n    console.log('Элемент не найден на странице');\r\n    console.log(error)\r\n}\r\n\r\n\r\n// slider\r\n\r\nconst bookSlider = new Swiper('.book-slider', {\r\n    slidesPerView: 'auto',\r\n    slidesPerGroup: 1,\r\n    spaceBetween: 24,\r\n    simulateTouch: true,\r\n});\r\n\r\nconst marketSlider = new Swiper('.market-slider', {\r\n    navigation: {\r\n        nextEl: '.slider-arrow-next',\r\n        prevEl: '.slider-arrow-prev',\r\n    },\r\n    pagination: {\r\n        el: '.swiper-pagination',\r\n    },\r\n    slidesPerView: 'auto',\r\n    slidesPerGroup: 1,\r\n    spaceBetween: 0,\r\n    simulateTouch: true,\r\n    loop: true,\r\n    speed: 800,\r\n});\r\n\r\n\r\n// tags\r\n\r\nfunction goArray(nodeList) {\r\n    const array = [];\r\n    for (const node of nodeList) {\r\n        array.push(node);\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction hiddenElements(array, numberOfEl) {\r\n    let i = 0;\r\n    const hiddenElArray = [];\r\n\r\n    for (let el in array) {\r\n        i++;\r\n        if (i < numberOfEl) continue;\r\n        else {\r\n            array[el].classList.add('none');\r\n            hiddenElArray.push(array[el]);\r\n        }\r\n    }\r\n\r\n    return hiddenElArray;\r\n}\r\n\r\nfunction opacityTags(blocksArray) {\r\n    let i = 0;\r\n\r\n    for (let tag in blocksArray) {\r\n        i++;\r\n        if (i < 3) continue;\r\n        else {\r\n            blocksArray[tag].classList.add('opacity-07');\r\n        }\r\n    }\r\n}\r\n\r\nfunction showTags(btn, array, block) {\r\n    for (let tag of array) {\r\n        if (tag.classList.contains('none')) {\r\n            tag.classList.remove('none');\r\n        }\r\n        if (tag.classList.contains('opacity-07')) {\r\n            tag.classList.remove('opacity-07');\r\n        }\r\n    }\r\n    btn.classList.add('none');\r\n    block.classList.add('tags__block--active');\r\n}\r\n\r\ntry {\r\n    const moreBtnUp = document.querySelector('.tags__btn--up');\r\n    const moreBtnDown = document.querySelector('.tags__btn--down');\r\n    const tagBlocksUp = document.querySelectorAll('.tag-block--up');\r\n    const tagBlocksDown = document.querySelectorAll('.tag-block--down');\r\n    const upperBlock = document.querySelector('.tags__block--up');\r\n    const downBlock = document.querySelector('.tags__block--down');\r\n    const tagBlocksUpArray = goArray(tagBlocksUp);\r\n    const tagBlocksDownArray = goArray(tagBlocksDown);\r\n\r\n    hiddenElements(tagBlocksUpArray, 6);\r\n    opacityTags(tagBlocksUpArray);\r\n    hiddenElements(tagBlocksDownArray, 6);\r\n    opacityTags(tagBlocksDownArray);\r\n\r\n    moreBtnUp.addEventListener('click', () => {\r\n        showTags(moreBtnUp, tagBlocksUpArray, upperBlock);\r\n    });\r\n\r\n    moreBtnDown.addEventListener('click', () => {\r\n        showTags(moreBtnDown, tagBlocksDownArray, downBlock);\r\n    });\r\n} catch {\r\n    console.log('Элемент не найден на этой странице');\r\n}\r\n\r\n\r\n// download more\r\n\r\ntry {\r\n    const allMoreBtn = document.querySelectorAll('.documents__btn')\r\n\r\n    allMoreBtn.forEach(btn => {\r\n        const btnContainer = btn.parentElement;\r\n        const list = btnContainer.parentElement;\r\n        const allItems = list.querySelectorAll('.documents__item');\r\n        const gradient = list.querySelector('.gradient');\r\n        const allItemsArray = goArray(allItems);\r\n\r\n        const hiddenElementsArray = hiddenElements(allItemsArray, 4);\r\n\r\n        btn.addEventListener('click', () => {\r\n            for (let hiddenEl of hiddenElementsArray) {\r\n                hiddenEl.style.display = 'block';\r\n            }\r\n            gradient.classList.add('gradient--none');\r\n            btn.style.display = 'none';\r\n        })\r\n    })\r\n} catch {\r\n    console.log('Элемент не найден на этой странице');\r\n}\r\n\r\n// copy\r\n\r\ntry {\r\n    const allCopy = document.querySelectorAll('.contact__copy');\r\n\r\n    allCopy.forEach(copy => {\r\n        const header = copy.parentElement;\r\n        const card = header.parentElement;\r\n\r\n        const dscr = card.querySelector('.contact__dscr');\r\n\r\n        copy.addEventListener('click', () => {\r\n            const message = document.createElement('p');\r\n            message.classList.add('succsess-copy');\r\n            message.textContent = 'Скопировано';\r\n            header.append(message);\r\n\r\n            setTimeout(() => message.remove(), 2000);\r\n            navigator.clipboard.writeText(dscr.textContent);\r\n        })\r\n    })\r\n} catch {\r\n    console.log('Текст не скопирован');\r\n}\r\n\r\n// more insurance journal\r\n\r\ntry {\r\n    const moreBtnInsurance = document.querySelector('.i-about__more');\r\n    const hiddenBlockInsurance = document.querySelector('.i-about__hidden-block');\r\n    const hiddenBtnInsurance =  document.querySelector('.i-about__hidden');\r\n\r\n    moreBtnInsurance.addEventListener('click', () => {\r\n        hiddenBlockInsurance.style.display = 'block';\r\n        moreBtnInsurance.style.display = 'none';\r\n    })\r\n\r\n    hiddenBtnInsurance.addEventListener('click', () => {\r\n        hiddenBlockInsurance.style.display = 'none';\r\n        moreBtnInsurance.style.display = 'block';\r\n    })\r\n} catch {\r\n    console.log('Элемент не найден на странице');\r\n}\r\n\r\n// Accordion\r\n\r\ntry {\r\n\r\n    const allAccordionItem = document.querySelectorAll('.accordion-item__header');\r\n    const allAccordionAnswer = document.querySelectorAll('.accordion-item__body');\r\n\r\n    let i = 0;\r\n\r\n    for (let itemHeader of allAccordionItem) {\r\n        i++;\r\n        if (i === 4) {\r\n            const item = itemHeader.parentNode;\r\n            const body = item.querySelector('.accordion-item__body');\r\n            const answer = itemHeader.nextElementSibling;\r\n            const svgIcon = itemHeader.querySelector('.accordion-item__icon');\r\n            svgIcon.classList.add('accordion-item__icon--active');\r\n            itemHeader.classList.add('accordion-item__header--active');\r\n            answer.style.maxHeight = (answer.scrollHeight) + 'px';\r\n        }\r\n    }\r\n\r\n    allAccordionItem.forEach(item => {\r\n        item.addEventListener('click', () => {\r\n            let answer = item.nextElementSibling;\r\n            let svgIcon = item.querySelector('.accordion-item__icon');\r\n\r\n            if (answer.style.maxHeight) {\r\n                allAccordionAnswer.forEach(body => {\r\n                    body.style.maxHeight = null;\r\n                })\r\n                svgIcon.classList.remove('accordion-item__icon--active');\r\n                item.classList.remove('accordion-item__header--active');\r\n            } else {\r\n                allAccordionAnswer.forEach(body => {\r\n                    body.style.maxHeight = null;\r\n                })\r\n                answer.style.maxHeight = answer.scrollHeight + 'px';\r\n                svgIcon.classList.add('accordion-item__icon--active');\r\n                item.classList.add('accordion-item__header--active');\r\n            }\r\n        })\r\n    })\r\n} catch {\r\n    console.log('Элемент не найден на странице');\r\n}\n\n//# sourceURL=webpack://escn/./src/scripts/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/scripts/index.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;